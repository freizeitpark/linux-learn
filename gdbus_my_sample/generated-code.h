/*
 * Generated by gdbus-codegen 2.54.2. DO NOT EDIT.
 *
 * The license of this code is the same as for the source it was derived from.
 */

#ifndef __GENERATED_CODE_H__
#define __GENERATED_CODE_H__

#include <gio/gio.h>

G_BEGIN_DECLS


/* ------------------------------------------------------------------------ */
/* Declarations for a.example */

#define EXAMPLE_TYPE_A_EXAMPLE (example_a_example_get_type ())
#define EXAMPLE_A_EXAMPLE(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), EXAMPLE_TYPE_A_EXAMPLE, exampleAExample))
#define EXAMPLE_IS_A_EXAMPLE(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), EXAMPLE_TYPE_A_EXAMPLE))
#define EXAMPLE_A_EXAMPLE_GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE ((o), EXAMPLE_TYPE_A_EXAMPLE, exampleAExampleIface))

struct _exampleAExample;
typedef struct _exampleAExample exampleAExample;
typedef struct _exampleAExampleIface exampleAExampleIface;

struct _exampleAExampleIface
{
  GTypeInterface parent_iface;


  gboolean (*handle_my_method_a) (
    exampleAExample *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_InArg);

  gboolean (*handle_my_method_b) (
    exampleAExample *object,
    GDBusMethodInvocation *invocation,
    GVariant *arg_InArg);

  void (*my_signal_a) (
    exampleAExample *object,
    const gchar *arg_value);

  void (*my_signal_b) (
    exampleAExample *object,
    GVariant *arg_value);

};

GType example_a_example_get_type (void) G_GNUC_CONST;

GDBusInterfaceInfo *example_a_example_interface_info (void);
guint example_a_example_override_properties (GObjectClass *klass, guint property_id_begin);


/* D-Bus method call completion functions: */
void example_a_example_complete_my_method_a (
    exampleAExample *object,
    GDBusMethodInvocation *invocation,
    const gchar *OutArg);

void example_a_example_complete_my_method_b (
    exampleAExample *object,
    GDBusMethodInvocation *invocation,
    GVariant *OutArg);



/* D-Bus signal emissions functions: */
void example_a_example_emit_my_signal_a (
    exampleAExample *object,
    const gchar *arg_value);

void example_a_example_emit_my_signal_b (
    exampleAExample *object,
    GVariant *arg_value);



/* D-Bus method calls: */
void example_a_example_call_my_method_a (
    exampleAExample *proxy,
    const gchar *arg_InArg,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean example_a_example_call_my_method_a_finish (
    exampleAExample *proxy,
    gchar **out_OutArg,
    GAsyncResult *res,
    GError **error);

gboolean example_a_example_call_my_method_a_sync (
    exampleAExample *proxy,
    const gchar *arg_InArg,
    gchar **out_OutArg,
    GCancellable *cancellable,
    GError **error);

void example_a_example_call_my_method_b (
    exampleAExample *proxy,
    GVariant *arg_InArg,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean example_a_example_call_my_method_b_finish (
    exampleAExample *proxy,
    GVariant **out_OutArg,
    GAsyncResult *res,
    GError **error);

gboolean example_a_example_call_my_method_b_sync (
    exampleAExample *proxy,
    GVariant *arg_InArg,
    GVariant **out_OutArg,
    GCancellable *cancellable,
    GError **error);



/* ---- */

#define EXAMPLE_TYPE_A_EXAMPLE_PROXY (example_a_example_proxy_get_type ())
#define EXAMPLE_A_EXAMPLE_PROXY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), EXAMPLE_TYPE_A_EXAMPLE_PROXY, exampleAExampleProxy))
#define EXAMPLE_A_EXAMPLE_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), EXAMPLE_TYPE_A_EXAMPLE_PROXY, exampleAExampleProxyClass))
#define EXAMPLE_A_EXAMPLE_PROXY_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), EXAMPLE_TYPE_A_EXAMPLE_PROXY, exampleAExampleProxyClass))
#define EXAMPLE_IS_A_EXAMPLE_PROXY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), EXAMPLE_TYPE_A_EXAMPLE_PROXY))
#define EXAMPLE_IS_A_EXAMPLE_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), EXAMPLE_TYPE_A_EXAMPLE_PROXY))

typedef struct _exampleAExampleProxy exampleAExampleProxy;
typedef struct _exampleAExampleProxyClass exampleAExampleProxyClass;
typedef struct _exampleAExampleProxyPrivate exampleAExampleProxyPrivate;

struct _exampleAExampleProxy
{
  /*< private >*/
  GDBusProxy parent_instance;
  exampleAExampleProxyPrivate *priv;
};

struct _exampleAExampleProxyClass
{
  GDBusProxyClass parent_class;
};

GType example_a_example_proxy_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (exampleAExampleProxy, g_object_unref)
#endif

void example_a_example_proxy_new (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
exampleAExample *example_a_example_proxy_new_finish (
    GAsyncResult        *res,
    GError             **error);
exampleAExample *example_a_example_proxy_new_sync (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);

void example_a_example_proxy_new_for_bus (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
exampleAExample *example_a_example_proxy_new_for_bus_finish (
    GAsyncResult        *res,
    GError             **error);
exampleAExample *example_a_example_proxy_new_for_bus_sync (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);


/* ---- */

#define EXAMPLE_TYPE_A_EXAMPLE_SKELETON (example_a_example_skeleton_get_type ())
#define EXAMPLE_A_EXAMPLE_SKELETON(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), EXAMPLE_TYPE_A_EXAMPLE_SKELETON, exampleAExampleSkeleton))
#define EXAMPLE_A_EXAMPLE_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), EXAMPLE_TYPE_A_EXAMPLE_SKELETON, exampleAExampleSkeletonClass))
#define EXAMPLE_A_EXAMPLE_SKELETON_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), EXAMPLE_TYPE_A_EXAMPLE_SKELETON, exampleAExampleSkeletonClass))
#define EXAMPLE_IS_A_EXAMPLE_SKELETON(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), EXAMPLE_TYPE_A_EXAMPLE_SKELETON))
#define EXAMPLE_IS_A_EXAMPLE_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), EXAMPLE_TYPE_A_EXAMPLE_SKELETON))

typedef struct _exampleAExampleSkeleton exampleAExampleSkeleton;
typedef struct _exampleAExampleSkeletonClass exampleAExampleSkeletonClass;
typedef struct _exampleAExampleSkeletonPrivate exampleAExampleSkeletonPrivate;

struct _exampleAExampleSkeleton
{
  /*< private >*/
  GDBusInterfaceSkeleton parent_instance;
  exampleAExampleSkeletonPrivate *priv;
};

struct _exampleAExampleSkeletonClass
{
  GDBusInterfaceSkeletonClass parent_class;
};

GType example_a_example_skeleton_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (exampleAExampleSkeleton, g_object_unref)
#endif

exampleAExample *example_a_example_skeleton_new (void);


G_END_DECLS

#endif /* __GENERATED_CODE_H__ */
